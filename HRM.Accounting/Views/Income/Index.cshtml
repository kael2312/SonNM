@{
    ViewData["Title"] = "Total income summary";
}
<link rel="stylesheet" href="https://cdn.datatables.net/2.0.8/css/dataTables.dataTables.css" />
<script src="https://cdn.datatables.net/2.0.8/js/dataTables.js"></script>

<style>
    .modal-dialog {
        max-width: 50%;
    }

    .staff-information {
        border: 2px solid #EBEDF3;
        padding: 15px;
        margin-bottom: 10px;
        border-radius: 5px;
    }

    .table.salary-table thead th {
        border-bottom: 2px solid #c2a4fd;
        border-top: 2px solid #c2a4fd;
        text-align: center;
    }

    .table.salary-table tbody td, .salary-and-pit-table td {
        text-align: end;
    }

    .table.salary-table thead th.salary-benefit {
        vertical-align: middle;
    }

    .table.salary-table tfoot {
        background-color: green;
        color: white;
        font-size: 17px;
    }

    th.salary-benefit {
        width: 250px;
    }
</style>

<div class="card card-custom">
    <table id="myTable" class="display">
    </table>
</div>
<input type="file" id="import-document" accept=".xlsx" style="display:none" />

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title fs-5" id="exampleModalLabel">Annual total income</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Staff Information -->
                <div class="staff-information">
                    <h1 id="staff-name"></h1>
                    <div class="row">
                        <div class="col-5">
                            <div class="row">
                                <div class="col-3">Staff code:</div>
                                <div class="col-5" id="staff-code"></div>
                            </div>
                            <div class="row">
                                <div class="col-3">Department:</div>
                                <div class="col-5" id="department"></div>
                            </div>
                            <div class="row">
                                <div class="col-3">Position:</div>
                                <div class="col-5" id="position"></div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="row">
                                <div class="col-4">Year of Experience:</div>
                                <div class="col-6" id="yoe"></div>
                            </div>
                            <div class="row">
                                <div class="col-4">Leave taken:</div>
                                <div class="col-6" id="leave-taken"></div>
                            </div>
                            <div class="row">
                                <div class="col-4">KPI:</div>
                                <div class="col-6" id="kpi"></div>
                            </div>
                        </div>
                    </div>

                </div>

                <!-- Salary Information -->
                <table class="table table-bordered salary-table">
                    <thead class="table-info">
                        <tr>
                            <th rowspan="2" class="salary-benefit">SALARY & BENEFITS</th>
                            <th colspan="2">VND</th>
                            <th colspan="2">USD (Ex-rate: 23,000)</th>
                        </tr>
                        <tr>
                            <th class="money">Month</th>
                            <th class="money">Year</th>
                            <th class="money">Month</th>
                            <th class="money">Year</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                    <tfoot class="table-footer">
                        <tr>
                            <th scope="row">TOTAL</th>
                            <td>34,110,368</td>
                            <td>409,324,423</td>
                            <td>1,483</td>
                            <td>17,796</td>
                        </tr>
                    </tfoot>
                </table>

                <!-- Salary and PIT -->
                <table class="table table-danger table-bordered salary-and-pit-table">
                    <tbody>
                        <tr>
                            <th class="salary-benefit">Salary from July 2024</th>
                            <td class="money">23,913,000</td>
                            <td class="money">0</td>
                            <td class="money">0</td>
                            <td class="money">0</td>
                        </tr>
                        <tr>
                            <th class="salary-benefit">Pit of July 2024</th>
                            <td class="money">14,306,666</td>
                            <td class="money">0</td>
                            <td class="money">0</td>
                            <td class="money">0</td>
                        </tr>
                    </tbody>
                </table>

                <!-- Note -->
                <div class="card">
                    <div class="card-body">
                        <div><strong>***Notes: </strong></div>
                        <ul>
                            <li>Allowances of Item B2 & C1 to C6 will receive after the Labor contract signing.</li>
                            <li>Allowances C5 & C6, the employee is entitled based on the number of working months in a year</li>
                        </ul>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        let table = new DataTable('#myTable', {
            scrollCollapse: true,
            scrollX: true,
            scrollY: 300,
            data: null,
            columns: [
                { data: null, title: 'Full Name', width: '130px' },
                { data: null, title: 'Department', width: '130px' },
                { data: null, title: 'Position', width: '130px' },
                { data: null, title: 'DOE', width: '70px' },
                { data: null, title: 'Depedent', width: '50px' },
                { data: null, title: 'Leave taken' },
                { data: null, title: 'KPI' },
                { data: null, title: 'Email', width: '130px' },
                { data: null, title: 'Salary (Yearly)', width: '70px' },
                { data: null, title: 'Bonus (Jul, 2024)', width: '70px' },
                { data: null, title: 'Bonus (Dec, 2023)', width: '70px' },
                { data: null, title: 'PIT', width: '100px' },
                { data: null, title: 'Lunch', width: '100px' },
                { data: null, title: 'Mobile', width: '100px' },
                { data: null, title: 'Petro', width: '100px' },
                { data: null, title: 'Taxi', width: '100px' },
                { data: null, title: 'Uniform', width: '100px' },
                { data: null, title: 'Medical Insurance', width: '100px' },
                { data: null, title: 'Accident Insurance', width: '100px' },
                { data: null, title: 'Health Checkup', width: '90px' },
                { data: null, title: 'Social Insurance', width: '100px' },
                { data: null, title: 'Basic Salary (30 Jun 24)', width: '80px' },
                { data: null, title: 'Salary (30 Jun 24)', width: '62px' },
                { data: null, title: 'Total', width: '100px' },
            ]
        });
        var ctbl_table;

        if (ctbl_table == null) {
            $('#btnSend').css('display', 'none');
        }

        $(document).ready(function () {

            $('#btnImport').on('click', function () {
                $('#import-document').trigger('click');
            })

            $('#import-document').on('change', function () {
                if ($('#import-document').prop('files').length > 0) {
                    importDocument($('#import-document').prop('files')[0]);
                } else {
                    $('#import-document').trigger('click');
                }
            })
        });

        function importDocument(file) {
            var dataFr = new FormData();
            dataFr.append('file', file);

            $.ajax({
                url: "@Url.Action("Import")",
                type: "POST",
                data: dataFr,
                processData: false,
                contentType: false,
                enctype: "multipart/form-data",
                success: function (data) {
                    if (data != null) {
                        table.destroy();
                        $('#myTable').empty();
                        $('#btnSend').css('display', 'inline');
                        ctbl_table = $('#myTable').DataTable({
                            scrollCollapse: true,
                            scrollX: true,
                            scrollY: 300,
                            data: data,
                            select: {
                                style: 'multi'
                            },
                            columns: [
                                {
                                    data: null, title: 'Full Name', width: '170px',
                                    render: function (data, type) {
                                        return '<strong>' + data.fullName + '</strong>' + '</br>' + data.staffCode
                                    }
                                },
                                { data: 'department', title: 'Department', width: '130px'},
                                { data: 'position', title: 'Position', width: '170px' },
                                {
                                    data: null, title: 'DOE', width: '70px',
                                    render: function (data, type) {
                                        return formatDate(data.doe) + '</br>' + data.yoe + ' years';
                                    }
                                },
                                {
                                    data: null, title: 'Depedent', width: '50px',
                                    render: function (data, type) {
                                        if (data.depedent > 0) {
                                            result = data.depedent;
                                        }
                                        else {
                                            result = '-'
                                        }

                                        return result;
                                    }
                                },
                                { data: 'leaveTaken', title: 'Leave taken' },
                                {
                                    data: 'kpi', title: 'KPI'
                                },
                                { data: 'email', title: 'Email' },
                                {
                                    data: null, title: 'Salary (Yearly)', width: '90px',
                                    render: function (data, type) {
                                        if (data.salaryMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.salaryYearly) + '</br>' + formatMoney(data.salaryMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Bonus (Jul, 2024)', width: '70px',
                                    render: function (data, type) {
                                        if (data.bonusJun24Monthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.bonusJun24Monthly)
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Bonus (Dec, 2023)', width: '70px',
                                    render: function (data, type) {
                                        if (data.bonusDec23Monthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.bonusDec23Monthly)
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'PIT', width: '100px',
                                    render: function (data, type) {
                                        if (data.pitMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.pitYearly) + '</br>' + formatMoney(data.pitMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Lunch', width: '100px',
                                    render: function (data, type) {
                                        if (data.lunchMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.lunchYearly) + '</br>' + formatMoney(data.lunchMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Mobile', width: '100px',
                                    render: function (data, type) {
                                        if (data.mobileMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.mobileYearly) + '</br>' + formatMoney(data.mobileMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Petro', width: '100px',
                                    render: function (data, type) {
                                        if (data.petroMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.petroYearly) + '</br>' + formatMoney(data.petroMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Taxi', width: '100px',
                                    render: function (data, type) {
                                        if (data.taxiMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.taxiYearly) + '</br>' + formatMoney(data.taxiMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Uniform', width: '100px',
                                    render: function (data, type) {
                                        if (data.taxiMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.uniformYearly) + '</br>' + formatMoney(data.uniformMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Medical Insurance', width: '100px',
                                    render: function (data, type) {
                                        if (data.medicalInsuranceMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.medicalInsuranceYearly) + '</br>' + formatMoney(data.medicalInsuranceMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Accident Insurance', width: '100px',
                                    render: function (data, type) {
                                        if (data.accidentInsuranceMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.accidentInsuranceYearly) + '</br>' + formatMoney(data.accidentInsuranceMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Health Checkup', width: '90px',
                                    render: function (data, type) {
                                        if (data.healthCheckupMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.healthCheckupYearly) + '</br>' + formatMoney(data.healthCheckupMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Social Insurance', width: '100px',
                                    render: function (data, type) {
                                        if (data.socialInsuranceMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.socialInsuranceYearly) + '</br>' + formatMoney(data.socialInsuranceMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Basic Salary (30 Jun 24)', width: '80px',
                                    render: function (data, type) {
                                        if (data.basicSalary == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.basicSalary)
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Salary (30 Jun 24)', width: '62px',
                                    render: function (data, type) {
                                        if (data.newSalary == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.newSalary)
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Total', width: '100px',
                                    render: function (data, type) {
                                        if (data.totalMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.totalYearly) + '</br>' + formatMoney(data.totalMonthly) + '/m'
                                        }
                                    }
                                },
                            ]
                        });
                    }
                },
                error: function (xhr) {
                    console.warn('xhr', xhr);
                }
            });
        }

        $('#myTable').on('click', 'tr', function () {
            console.log('clicked: ', ctbl_table.row(this).data())
            var data = ctbl_table.row(this).data();
                $('#staff-name').text(data.fullName);
                $('#staff-code').text(data.staffCode);
                $('#department').text(data.department);
                $('#position').text(data.position);
                $('#yoe').text(data.yoe);
                $('#leave-taken').text(data.leaveTaken);
                $('#kpi').text(data.kpi + '/100');

            var object = {
                salaryBonus: {
                    averageSalary: {
                        name: 'Average salary',
                        monthVND: data.salaryMonthly,
                        yearVND: data.salaryYearly,
                        monthUSD: 0,
                        yearUSD: 0
                    },
                    bonusMidYear: {
                        name: 'Bonus Mid Year',
                        monthVND: data.bonusJun24Monthly,
                        yearVND: 0,
                        monthUSD: 0,
                        yearVND: 0
                    },
                    otherMidYearIncome: {
                        name: 'Other Mid Year Income',
                        monthVND: 0,
                        yearVND: 0,
                        monthUSD: 0,
                        yearUSD: 0
                    },
                    bonusYearEnd: {
                        name: 'Bonus Year End',
                        monthVND: 0,
                        yearVND: 0,
                        monthUSD: 0,
                        yearUSD: 0
                    }
                },
                pitSMU: {
                    pitOnSalaryBonus: {
                        name: 'PIT on Salary + Bonus',
                        monthVND: data.pitMonthly,
                        yearVND: data.pitYearly,
                        monthUSD: 0,
                        yearUSD: 0
                    },
                    smu: {
                        name: 'SMU',
                        monthVND: data.socialInsuranceMonthly,
                        yearVND: data.socialInsuranceYearly,
                        monthUSD: 0,
                        yearUSD: 0
                    },
                    basicSalary: {
                        name: 'Basic Salary',
                        monthVND: 0,
                        yearVND: 0,
                        monthUSD: 0,
                        yearUSD: 0
                    }
                },
                otherBenefit: {
                    lunchAllowance: {
                        name: 'Lunch Allowance',
                        monthVND: data.lunchMonthly,
                        yearVND: data.lunchYearly,
                        monthUSD: 0,
                        yearUSD: 0
                    },
                    telephoneAllowance: {
                        name: 'Telephone Allowance',
                        monthVND: data.mobileMonthly,
                        yearVND: data.mobileYearly,
                        monthUSD: 0,
                        yearUSD: 0
                    },
                    petro: {
                        name: 'Petro',
                        monthVND: data.petroMonthly,
                        yearVND: data.petroYearly,
                        monthUSD: 0,
                        yearUSD: 0
                    },
                    taxiCard: {
                        name: 'Taxi card',
                        monthVND: data.taxiMonthly,
                        yearVND: data.taxiYearly,
                        monthUSD: 0,
                        yearUSD: 0
                    },
                    accidentInsurence: {
                        name: "Accident Insurance",
                        monthVND: data.accidentInsuranceMonthly,
                        yearVND: data.accidentInsuranceYearly,
                        monthUSD: 0,
                        yearUSD: 0
                    },
                    medicalInsurance: {
                        name: "Medical Insurance",
                        monthVND: data.medicalInsuranceMonthly,
                        yearVND: data.medicalInsuranceYearly,
                        monthUSD: 0,
                        yearUSD: 0
                    },
                    healthCheckUp: {
                        name: "Health CheckUp",
                        monthVND: data.healthCheckupMonthly,
                        yearVND: data.healthCheckupYearly,
                        monthUSD: 0,
                        yearUSD: 0
                    }
                }
            };

            var json = JSON.stringify(object)
                var modalTable = $('.modal-body .table.salary-table tbody');
                modalTable.empty(); // Clear the existing rows

                // Iterate over the data and create a new row for each item
                $.each(data, function(key, value) {
                    var row = $('<tr>');
                    row.append($('<th>').text(key));
                    row.append($('<td>').text(value));
                    row.append($('<td>').text(0));
                    row.append($('<td>').text(0));
                    row.append($('<td>').text(0));
                    modalTable.append(row);
                });
            $('#exampleModal').modal('show');
        })

        function formatDate(dateInput) {
            if (dateInput != null) {
                var date = new Date(dateInput).toDateString();
                date = date.split(' ');
                return date[2] + ' ' + date[1] + ' ' + date[3];
            }
        }

        function formatMoney(moneyInput) {
            if (moneyInput > 0) {
                var format = new Intl.NumberFormat('en-US', {
                    minimumFractionDigits: 0
                }).format(moneyInput);
                return format;
            }
            else {
                return '-';
            }
        }
    </script>
}

@section Toolbar{
    <a id="btnImport" href="#" class="btn btn-sm btn-primary mr-1">
        <span class="svg-icon svg-icon-sm mr-0">
            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M14 10V12.6667C14 13.0203 13.8595 13.3594 13.6095 13.6095C13.3594 13.8595 13.0203 14 12.6667 14H3.33333C2.97971 14 2.64057 13.8595 2.39052 13.6095C2.14048 13.3594 2 13.0203 2 12.6667V10" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" />
                <path d="M11.3334 5.33333L8.00008 2L4.66675 5.33333" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" />
                <path d="M8 2V10" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" />
            </svg>

        </span>
        <span class="d-none d-sm-inline">Import File</span>
    </a>
    <a id="btnSend" href="#" class="btn btn-sm btn-success mr-1">
        <span class="svg-icon svg-icon-sm mr-0">
            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g clip-path="url(#clip0_250_496)">
                    <path d="M14.6668 1.33337L7.3335 8.66671" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M14.6668 1.33337L10.0002 14.6667L7.3335 8.66671L1.3335 6.00004L14.6668 1.33337Z" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" />
                </g>
                <defs>
                    <clipPath id="clip0_250_496">
                        <rect width="16" height="16" fill="white" />
                    </clipPath>
                </defs>
            </svg>
        </span>
        <span class="d-none d-sm-inline">Send Email</span>
    </a>
}