@{
    ViewData["Title"] = "Total income summary";
}
<link rel="stylesheet" href="https://cdn.datatables.net/2.0.8/css/dataTables.dataTables.css"/>
<script src="https://cdn.datatables.net/2.0.8/js/dataTables.js"></script>

<style>
    .modal-dialog {
        max-width: 900px;
        font-family: Inter;
    }
    
    thead.table-info .money {
        width: 150px;
    }
    
    .modal .modal-header .modal-title#exampleModalLabel{
        font-weight: 600;
        font-size: 24px !important;
    }

    .staff-general-information {
        border: 2px solid #EBEDF3;
        padding: 10px 15px;
        margin-bottom: 10px;
        border-radius: 5px;
    }
    
    #staff-name{
        font-weight: 600;
        font-size: 20px;
        margin-bottom: 5px;
    }
    
    .staff-info {
        font-weight: 400;
        font-size: 14px;
        color: #6C6C6C;
    }
    
    #staff-code, #department, #position, #yoe, #leave-taken, #kpi {
        font-size: 14px;
        font-weight: 500;
    }
    
    #kpi{
        color: #2e6be5;
    }
    
    #kpi-100{
        color: #6C6C6C;
    }

    .table.salary-table thead th {
        border: 2px solid #d8dded;
        text-align: center;
        padding: 6px;
        font-weight: 500;
    }

    .table.salary-table tbody td, .salary-and-pit-table td {
        text-align: end;
    }

    .table.salary-table thead th.salary-benefit {
        vertical-align: middle;
    }

    .table.salary-table tfoot {
        background-color: green;
        color: white;
        font-size: 16px;
    }
    
    .table.salary-table tfoot td  {
        text-align: end;
    }

    th.salary-benefit {
        width: 250px;
        text-align: start !important;
    }
    
    tr.row-salary-category {
        background-color: #edf3ff;
        font-size: 15px;
        font-weight: 600;
    }
    
    th.salary-category {
        font-weight: 600;
        font-size: 14px;
    }
    
    tr.row-salary-category .money{
        color: #2e6be5;
        font-size: 14px;
        font-weight: 600;
    }
    
    th.sub-salary-category {
        padding-left: 15px;
        font-weight: 400;
        color: #404040;
        font-size: 14px;
    }
    
    .sub-money, .salary-and-pit-table .money{
        font-size: 14px;
        font-weight: 400;   
        color: #404040;     
    }
    
    .row-net-income, .row-pit-smu, .row-other-benefits {
        background-color: #edf3ff;
    }
    
    .total-info{
        font-size: 14px;
        font-weight: 600;
    }
    
    .total-detail{
        font-size: 12px;
        font-weight: 400;
        color: #6c6c6c;
    }
    
    .row-net-income .money, .row-pit-smu .money, .row-other-benefits .money {
        vertical-align: middle;
    }
    
    table.salary-and-pit-table .money {
        width: 150px;
    }
    
    .card.notes{
        background-color: #F5F5F5;
    }
    
</style>

<div class="card card-custom">
    <table id="myTable" class="display">
    </table>
</div>
<input type="file" id="import-document" accept=".xlsx" style="display:none" />

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title fs-5" id="exampleModalLabel">Annual total income</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Staff Information -->
                <div class="staff-general-information">
                    <div id="staff-name"></div>
                    <div class="row">
                        <div class="col-5">
                            <div class="row">
                                <div class="col-4 staff-info">Staff code:</div>
                                <div class="col-5" id="staff-code"></div>
                            </div>
                            <div class="row">
                                <div class="col-4 staff-info">Department:</div>
                                <div class="col-5" id="department"></div>
                            </div>
                            <div class="row">
                                <div class="col-4 staff-info">Position:</div>
                                <div class="col-5" id="position"></div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="row">
                                <div class="col-5 staff-info">Year of Experience:</div>
                                <div class="col-6" id="yoe"></div>
                            </div>
                            <div class="row">
                                <div class="col-5 staff-info">Leave taken:</div>
                                <div class="col-6" id="leave-taken"></div>
                            </div>
                            <div class="row">
                                <div class="col-5 staff-info">KPI:</div>
                                <div class="col-6">
                                    <span id="kpi"></span><span id="kpi-100">/100</span>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <!-- Salary Information -->
                <table class="table table-bordered salary-table">
                    <thead class="table-info">
                    <tr>
                        <th rowspan="2" class="salary-benefit">SALARY & BENEFITS</th>
                        <th colspan="2">VND</th>
                        <th colspan="2">USD (Ex-rate: 23,000)</th>
                    </tr>
                    <tr>
                        <th class="money">Month</th>
                        <th class="money">Year</th>
                        <th class="money">Month</th>
                        <th class="money">Year</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr class="row-salary-category">
                        <th class="salary-category">A. Salary + Bonus</th>
                        <td class="money" id="salaryBonusMonthly"></td>
                        <td class="money" id="salaryBonusYearly"></td>
                        <td class="money">0</td>
                        <td class="money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">1. Average salary</th>
                        <td class="sub-money" id="salaryMonthly"></td>
                        <td class="sub-money" id="salaryYearly"></td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">2. Bonus mid year</th>
                        <td class="sub-money" id="bonusJun24Monthly"></td>
                        <td class="sub-money" id="bonusJun24Yearly"></td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">3. Other mid year income</th>
                        <td class="sub-money" id="otherMidYearIncomeMonthly">0</td>
                        <td class="sub-money" id="otherMidYearIncomeYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">4. Bonus year end</th>
                        <td class="sub-money" id="bonusYearEndMonthly">0</td>
                        <td class="sub-money" id="bonusYearEndYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">5. Other year end income</th>
                        <td class="sub-money" id="otherYearEndIncomeMonthly">0</td>
                        <td class="sub-money" id="otherYearEndIncomeYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr class="row-salary-category">
                        <th class="salary-category">B. PIT + SMU</th>
                        <td class="money" id="pitSMUMonthly"></td>
                        <td class="money" id="pitSMUYearly">0</td>
                        <td class="money">0</td>
                        <td class="money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">1. PIT on salary + bonus</th>
                        <td class="sub-money" id="pITMonthly"></td>
                        <td class="sub-money" id="pITYearly"></td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">2. SMU</th>
                        <td class="sub-money" id="socialInsuranceMonthly">0</td>
                        <td class="sub-money" id="socialInsuranceYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">3. Basic salary</th>
                        <td class="sub-money" id="basicSalaryMonthly">0</td>
                        <td class="sub-money" id="basicSalaryYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr class="row-salary-category">
                        <th class="salary-category">C. Other Benefits</th>
                        <td class="money" id="otherBenefitsMonthly">0</td>
                        <td class="money" id="otherBenefitsYearly">0</td>
                        <td class="money">0</td>
                        <td class="money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">1. Lunch allowance</th>
                        <td class="sub-money" id="lunchMonthly">0</td>
                        <td class="sub-money" id="lunchYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">2. Telephone allowance</th>
                        <td class="sub-money" id="mobileMonthly">0</td>
                        <td class="sub-money" id="mobileYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">3. Petro</th>
                        <td class="sub-money" id="petroMonthly">0</td>
                        <td class="sub-money" id="petroYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">4. Taxi card</th>
                        <td class="sub-money" id="taxiMonthly">0</td>
                        <td class="sub-money" id="taxiYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">5. Accident insurance</th>
                        <td class="sub-money" id="accidentInsuranceMonthly">0</td>
                        <td class="sub-money" id="accidentInsuranceYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">6. Medical insurance</th>
                        <td class="sub-money" id="medicalInsuranceMonthly">0</td>
                        <td class="sub-money" id="medicalInsuranceYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr>
                        <th class="sub-salary-category">7. Health checkup</th>
                        <td class="sub-money" id="healthCheckupMonthly">0</td>
                        <td class="sub-money" id="healthCheckupYearly">0</td>
                        <td class="sub-money">0</td>
                        <td class="sub-money">0</td>
                    </tr>
                    <tr class="row-net-income">
                        <th>
                            <div class="total-info">Net Income</div>
                            <div class="total-detail">A1 + A2 + A3 + A4 + A5 + C1</div>
                        </th>
                        <td class="money" id="totalNetIncomeMonthly">0</td>
                        <td class="money" id="totalNetIncomeYearly">0</td>
                        <td class="money">0</td>
                        <td class="money">0</td>
                    </tr>
                    <tr class="row-pit-smu">
                        <th>
                            <div class="total-info">PIT + SMU</div>
                            <div class="total-detail">B1 + B2</div>
                        </th>
                        <td class="money" id="totalPITSMUMonthly">0</td>
                        <td class="money" id="totalPITSMUYearly">0</td>
                        <td class="money">0</td>
                        <td class="money">0</td>
                    </tr>
                    <tr class="row-other-benefits">
                        <th>
                            <div class="total-info">Other Benefits</div>
                            <div  class="total-detail">C2 + C3 + C4 + C5 + C6 + C7</div>
                        </th>
                        <td class="money" id="totalOtherBenefitsMonthly">0</td>
                        <td class="money" id="totalOtherBenefitsYearly">0</td>
                        <td class="money">0</td>
                        <td class="money">0</td>
                    </tr>
                    
                    </tbody>
                    <tfoot class="table-footer">
                    <tr>
                        <th scope="row">TOTAL</th>
                        <td id="totalMonthly">0</td>
                        <td id="totalYearly"></td>
                        <td>0</td>
                        <td>0</td>
                    </tr>
                    </tfoot>
                </table>

                <!-- Salary and PIT -->
                <table class="table table-danger salary-and-pit-table">
                    <tbody>
                    <tr>
                        <th class="salary-benefit">Salary from July 2024</th>
                        <td class="money">0</td>
                        <td class="money">0</td>
                        <td class="money">0</td>
                        <td class="money">0</td>
                    </tr>
                    <tr>
                        <th class="salary-benefit">Pit of July 2024</th>
                        <td class="money">0</td>
                        <td class="money">0</td>
                        <td class="money">0</td>
                        <td class="money">0</td>
                    </tr>
                    </tbody>
                </table>

                <!-- Note -->
                <div class="card notes">
                    <div class="card-body">
                        <div>
                            <strong>***Notes: </strong>
                        </div>
                        <ul>
                            <li>Allowances of Item B2 & C1 to C6 will receive after the Labor contract signing.</li>
                            <li>Allowances C5 & C6, the employee is entitled based on the number of working months in a year</li>
                        </ul>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        let table = new DataTable('#myTable', {
            scrollCollapse: true,
            scrollX: true,
            scrollY: 300,
            data: null,
            columns: [
                { data: null, title: 'Full Name', width: '130px' },
                { data: null, title: 'Department', width: '130px' },
                { data: null, title: 'Position', width: '130px' },
                { data: null, title: 'DOE', width: '70px' },
                { data: null, title: 'Depedent', width: '50px' },
                { data: null, title: 'Leave taken' },
                { data: null, title: 'KPI' },
                { data: null, title: 'Email', width: '130px' },
                { data: null, title: 'Salary (Yearly)', width: '70px' },
                { data: null, title: 'Bonus (Jul, 2024)', width: '70px' },
                { data: null, title: 'Bonus (Dec, 2023)', width: '70px' },
                { data: null, title: 'PIT', width: '100px' },
                { data: null, title: 'Lunch', width: '100px' },
                { data: null, title: 'Mobile', width: '100px' },
                { data: null, title: 'Petro', width: '100px' },
                { data: null, title: 'Taxi', width: '100px' },
                { data: null, title: 'Uniform', width: '100px' },
                { data: null, title: 'Medical Insurance', width: '100px' },
                { data: null, title: 'Accident Insurance', width: '100px' },
                { data: null, title: 'Health Checkup', width: '90px' },
                { data: null, title: 'Social Insurance', width: '100px' },
                { data: null, title: 'Basic Salary (30 Jun 24)', width: '80px' },
                { data: null, title: 'Salary (30 Jun 24)', width: '62px' },
                { data: null, title: 'Total', width: '100px' },
            ]
        });
        var ctbl_table;

        if (ctbl_table == null) {
            $('#btnSend').css('display', 'none');
        }

        $(document).ready(function () {

            $('#btnImport').on('click', function () {
                $('#import-document').trigger('click');
            })

            $('#import-document').on('change', function () {
                if ($('#import-document').prop('files').length > 0) {
                    importDocument($('#import-document').prop('files')[0]);
                } else {
                    $('#import-document').trigger('click');
                }
            })
        });

        function importDocument(file) {
            var dataFr = new FormData();
            dataFr.append('file', file);

            $.ajax({
                url: "@Url.Action("Import")",
                type: "POST",
                data: dataFr,
                processData: false,
                contentType: false,
                enctype: "multipart/form-data",
                success: function (data) {
                    if (data != null) {
                        table.destroy();
                        $('#myTable').empty();
                        $('#btnSend').css('display', 'inline');
                        ctbl_table = $('#myTable').DataTable({
                            scrollCollapse: true,
                            scrollX: true,
                            scrollY: 300,
                            data: data,
                            select: {
                                style: 'multi'
                            },
                            columns: [
                                {
                                    data: null, title: 'Full Name', width: '170px',
                                    render: function (data, type) {
                                        return '<strong>' + data.fullName + '</strong>' + '</br>' + data.staffCode
                                    }
                                },
                                { data: 'department', title: 'Department', width: '130px'},
                                { data: 'position', title: 'Position', width: '170px' },
                                {
                                    data: null, title: 'DOE', width: '70px',
                                    render: function (data, type) {
                                        return formatDate(data.doe) + '</br>' + data.yoe + ' years';
                                    }
                                },
                                {
                                    data: null, title: 'Depedent', width: '50px',
                                    render: function (data, type) {
                                        if (data.depedent > 0) {
                                            result = data.depedent;
                                        }
                                        else {
                                            result = '-'
                                        }

                                        return result;
                                    }
                                },
                                { data: 'leaveTaken', title: 'Leave taken' },
                                {
                                    data: 'kpi', title: 'KPI'
                                },
                                { data: 'email', title: 'Email' },
                                {
                                    data: null, title: 'Salary (Yearly)', width: '90px',
                                    render: function (data, type) {
                                        if (data.salaryMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.salaryYearly) + '</br>' + formatMoney(data.salaryMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Bonus (Jul, 2024)', width: '70px',
                                    render: function (data, type) {
                                        if (data.bonusJun24Monthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.bonusJun24Monthly)
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Bonus (Dec, 2023)', width: '70px',
                                    render: function (data, type) {
                                        if (data.bonusDec23Monthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.bonusDec23Monthly)
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'PIT', width: '100px',
                                    render: function (data, type) {
                                        if (data.pitMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.pitYearly) + '</br>' + formatMoney(data.pitMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Lunch', width: '100px',
                                    render: function (data, type) {
                                        if (data.lunchMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.lunchYearly) + '</br>' + formatMoney(data.lunchMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Mobile', width: '100px',
                                    render: function (data, type) {
                                        if (data.mobileMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.mobileYearly) + '</br>' + formatMoney(data.mobileMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Petro', width: '100px',
                                    render: function (data, type) {
                                        if (data.petroMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.petroYearly) + '</br>' + formatMoney(data.petroMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Taxi', width: '100px',
                                    render: function (data, type) {
                                        if (data.taxiMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.taxiYearly) + '</br>' + formatMoney(data.taxiMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Uniform', width: '100px',
                                    render: function (data, type) {
                                        if (data.taxiMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.uniformYearly) + '</br>' + formatMoney(data.uniformMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Medical Insurance', width: '100px',
                                    render: function (data, type) {
                                        if (data.medicalInsuranceMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.medicalInsuranceYearly) + '</br>' + formatMoney(data.medicalInsuranceMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Accident Insurance', width: '100px',
                                    render: function (data, type) {
                                        if (data.accidentInsuranceMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.accidentInsuranceYearly) + '</br>' + formatMoney(data.accidentInsuranceMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Health Checkup', width: '90px',
                                    render: function (data, type) {
                                        if (data.healthCheckupMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.healthCheckupYearly) + '</br>' + formatMoney(data.healthCheckupMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Social Insurance', width: '100px',
                                    render: function (data, type) {
                                        if (data.socialInsuranceMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.socialInsuranceYearly) + '</br>' + formatMoney(data.socialInsuranceMonthly) + '/m'
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Basic Salary (30 Jun 24)', width: '80px',
                                    render: function (data, type) {
                                        if (data.basicSalary == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.basicSalary)
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Salary (30 Jun 24)', width: '62px',
                                    render: function (data, type) {
                                        if (data.newSalary == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.newSalary)
                                        }
                                    }
                                },
                                {
                                    data: null, title: 'Total', width: '100px',
                                    render: function (data, type) {
                                        if (data.totalMonthly == 0) {
                                            return '-';
                                        }
                                        else {
                                            return formatMoney(data.totalYearly) + '</br>' + formatMoney(data.totalMonthly) + '/m'
                                        }
                                    }
                                },
                            ]
                        });
                    }
                },
                error: function (xhr) {
                    console.warn('xhr', xhr);
                }
            });
        }

        $('#myTable').on('click', 'tr', function () {
            console.log('clicked: ', ctbl_table.row(this).data())
            var data = ctbl_table.row(this).data();
                $('#staff-name').text(data.fullName);
                $('#staff-code').text(data.staffCode);
                $('#department').text(data.department);
                $('#position').text(data.position);
                $('#yoe').text(data.yoe);
                $('#leave-taken').text(data.leaveTaken);
                $('#kpi').text(data.kpi);
                
                //A.Salary + Bonus
                var salaryBonusMonthly = parseStringToInt(data.salaryMonthly) + parseStringToInt(data.bonusJun24Monthly) + parseStringToInt(data.otherMidYearIncomeMonthly) + parseStringToInt(data.bonusYearEndMonthly) + parseStringToInt(data.otherYearEndIncomeMonthly)
                var salaryBonusYearly = parseStringToInt(data.salaryYearly) + parseStringToInt(data.bonusJun24Yearly) + parseStringToInt(data.otherMidYearIncomeYearly) + parseStringToInt(data.bonusYearEndYearly) + parseStringToInt(data.otherYearEndIncomeYearly)                
                $('#salaryBonusMonthly').text(numeral(salaryBonusMonthly).format('0,0'))
                $('#salaryBonusYearly').text(numeral(salaryBonusYearly).format('0,0'))
                $('#salaryMonthly').text(numeral(isNaN(data.salaryMonthly) ? 0 : data.salaryMonthly).format('0,0'))
                $('#salaryYearly').text(numeral(isNaN(data.salaryYearly) ? 0 : data.salaryYearly).format('0,0'))
                $('#bonusJun24Monthly').text(numeral(isNaN(data.bonusJun24Monthly) ? 0 : data.bonusJun24Monthly).format('0,0'))
                $('#bonusJun24Yearly').text(numeral(isNaN(data.bonusJun24Yearly) ? 0 : data.bonusJun24Yearly).format('0,0'))
                
                //B.PIT + SMU
                var pitSMUMonthly = parseStringToInt(data.pITMonthly) + parseStringToInt(data.socialInsuranceMonthly) + parseStringToInt(data.basicSalaryMonthly)
                var pitSMUYearly = parseStringToInt(data.pITYearly) + parseStringToInt(data.socialInsuranceYearly) + parseStringToInt(data.basicSalaryYearly)
                $('#pitSMUMonthly').text(numeral(pitSMUMonthly).format('0,0'))
                $('#pitSMUYearly').text(numeral(pitSMUYearly).format('0,0'))
                $('#pITMonthly').text(numeral(isNaN(data.pITMonthly) ? 0 : data.pITMonthly).format('0,0'))
                $('#pITYearly').text(numeral(isNaN(data.pITYearly) ? 0 : data.pITYearly).format('0,0'))
                $('#socialInsuranceMonthly').text(numeral(isNaN(data.socialInsuranceMonthly) ? 0 : data.socialInsuranceMonthly).format('0,0'))
                $('#socialInsuranceYearly').text(numeral(isNaN(data.socialInsuranceYearly) ? 0 : data.socialInsuranceYearly).format('0,0'))
                $('#basicSalaryMonthly').text(numeral(isNaN(data.basicSalaryMonthly) ? 0 : data.basicSalaryMonthly).format('0,0'))
                $('#basicSalaryYearly').text(numeral(isNaN(data.basicSalaryYearly) ? 0 : data.basicSalaryYearly).format('0,0'))
                
                //C.Other Benefits
                var otherBenefitsMonthly = parseStringToInt(data.lunchMonthly) + parseStringToInt(data.mobileMonthly) + parseStringToInt(data.petroMonthly) + parseStringToInt(data.taxiMonthly) + parseStringToInt(data.accidentInsuranceMonthly) + parseStringToInt(data.medicalInsuranceMonthly) + parseStringToInt(data.healthCheckupMonthly)
                var otherBenefitsYearly = parseStringToInt(data.lunchYearly) + parseStringToInt(data.mobileYearly) + parseStringToInt(data.petroYearly) + parseStringToInt(data.taxiYearly) + parseStringToInt(data.accidentInsuranceYearly) + parseStringToInt(data.medicalInsuranceYearly) + parseStringToInt(data.healthCheckupYearly)
                $('#otherBenefitsMonthly').text(numeral(otherBenefitsMonthly).format('0,0'))
                $('#otherBenefitsYearly').text(numeral(otherBenefitsYearly).format('0,0'))
                $('#lunchMonthly').text(numeral(isNaN(data.lunchMonthly) ? 0 : data.lunchMonthly).format('0,0'))
                $('#lunchYearly').text(numeral(isNaN(data.lunchYearly) ? 0 : data.lunchYearly).format('0,0'))
                $('#mobileMonthly').text(numeral(isNaN(data.mobileMonthly) ? 0 : data.mobileMonthly).format('0,0'))
                $('#mobileYearly').text(numeral(isNaN(data.mobileYearly) ? 0 : data.mobileYearly).format('0,0'))
                $('#petroMonthly').text(numeral(isNaN(data.petroMonthly) ? 0 : data.petroMonthly).format('0,0'))
                $('#petroYearly').text(numeral(isNaN(data.petroYearly) ? 0 : data.petroYearly).format('0,0'))
                $('#taxiMonthly').text(numeral(isNaN(data.taxiMonthly) ? 0 : data.taxiMonthly).format('0,0'))
                $('#taxiYearly').text(numeral(isNaN(data.taxiYearly) ? 0 : data.taxiYearly).format('0,0'))
                $('#accidentInsuranceMonthly').text(numeral(isNaN(data.accidentInsuranceMonthly) ? 0 : data.accidentInsuranceMonthly).format('0,0'))
                $('#accidentInsuranceYearly').text(numeral(isNaN(data.accidentInsuranceYearly) ? 0 : data.accidentInsuranceYearly).format('0,0'))
                $('#medicalInsuranceMonthly').text(numeral(isNaN(data.medicalInsuranceMonthly) ? 0 : data.medicalInsuranceMonthly).format('0,0'))
                $('#medicalInsuranceYearly').text(numeral(isNaN(data.medicalInsuranceYearly) ? 0 : data.medicalInsuranceYearly).format('0,0'))
                $('#healthCheckupMonthly').text(numeral(isNaN(data.healthCheckupMonthly) ? 0 : data.healthCheckupMonthly).format('0,0'))
                $('#healthCheckupYearly').text(numeral(isNaN(data.healthCheckupYearly) ? 0 : data.healthCheckupYearly).format('0,0'))
                
                //Total Net Income
                var totalNetIncomeMonthly = salaryBonusMonthly + parseStringToInt(data.lunchMonthly)
                var totalNetIncomeYearly = salaryBonusYearly + parseStringToInt(data.lunchYearly)
                $('#totalNetIncomeMonthly').text(numeral(totalNetIncomeMonthly).format('0,0'))
                $('#totalNetIncomeYearly').text(numeral(totalNetIncomeYearly).format('0,0'))
                
                //Total PIT + SMU
                var totalPITSMUMonthly = parseStringToInt(data.pITMonthly) + parseStringToInt(data.socialInsuranceMonthly)
                var totalPITSMUYearly = parseStringToInt(data.pITYearly) + parseStringToInt(data.socialInsuranceYearly)
                $('#totalPITSMUMonthly').text(numeral(totalPITSMUMonthly).format('0,0'))
                $('#totalPITSMUYearly').text(numeral(totalPITSMUYearly).format('0,0'))
                
                //Total Other Benefits
                var totalOtherBenefitsMonthly = otherBenefitsMonthly - parseStringToInt(data.lunchMonthly)
                var totalOtherBenefitsYearly = otherBenefitsYearly - parseStringToInt(data.lunchYearly)
                $('#totalOtherBenefitsMonthly').text(numeral(totalOtherBenefitsMonthly).format('0,0'))
                $('#totalOtherBenefitsYearly').text(numeral(totalOtherBenefitsYearly).format('0,0'))
                
                var totalMonthly = totalNetIncomeMonthly + totalPITSMUMonthly + totalOtherBenefitsMonthly
                var totalYearly = totalNetIncomeYearly + totalPITSMUYearly + totalOtherBenefitsYearly
                $('#totalMonthly').text(numeral(totalMonthly).format('0,0'))
                $('#totalYearly').text(numeral(totalYearly).format('0,0'))
                
                
            $('#exampleModal').modal('show');
        })
        
        function parseStringToInt(str) {
            var number = parseInt(str);
            if (isNaN(number))
                return 0;
            else
                return number;
        }

        function formatDate(dateInput) {
            if (dateInput != null) {
                var date = new Date(dateInput).toDateString();
                date = date.split(' ');
                return date[2] + ' ' + date[1] + ' ' + date[3];
            }
        }

        function formatMoney(moneyInput) {
            if (moneyInput > 0) {
                var format = new Intl.NumberFormat('en-US', {
                    minimumFractionDigits: 0
                }).format(moneyInput);
                return format;
            }
            else {
                return '-';
            }
        }
    </script>
}

@section Toolbar{
    <a id="btnImport" href="#" class="btn btn-sm btn-primary mr-1">
        <span class="svg-icon svg-icon-sm mr-0">
            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M14 10V12.6667C14 13.0203 13.8595 13.3594 13.6095 13.6095C13.3594 13.8595 13.0203 14 12.6667 14H3.33333C2.97971 14 2.64057 13.8595 2.39052 13.6095C2.14048 13.3594 2 13.0203 2 12.6667V10" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" />
                <path d="M11.3334 5.33333L8.00008 2L4.66675 5.33333" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" />
                <path d="M8 2V10" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" />
            </svg>

        </span>
        <span class="d-none d-sm-inline">Import File</span>
    </a>
    <a id="btnSend" href="#" class="btn btn-sm btn-success mr-1">
        <span class="svg-icon svg-icon-sm mr-0">
            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g clip-path="url(#clip0_250_496)">
                    <path d="M14.6668 1.33337L7.3335 8.66671" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M14.6668 1.33337L10.0002 14.6667L7.3335 8.66671L1.3335 6.00004L14.6668 1.33337Z" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" />
                </g>
                <defs>
                    <clipPath id="clip0_250_496">
                        <rect width="16" height="16" fill="white" />
                    </clipPath>
                </defs>
            </svg>
        </span>
        <span class="d-none d-sm-inline">Send Email</span>
    </a>
}